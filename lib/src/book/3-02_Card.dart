// Импортируем библиотеку Flutter для создания интерфейса приложения
import 'package:flutter/material.dart';

// Точка входа в приложение — функция main запускает приложение
void main() => runApp(MyApp());

// Класс MyApp — главный виджет приложения, наследуется от StatelessWidget (неизменяемый виджет)
class MyApp extends StatelessWidget {
  @override
  // Метод build определяет, как будет выглядеть экран
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Flutter Playground", // Заголовок приложения
      home: Scaffold(
        // Scaffold задаёт структуру экрана
        body: Center(
          // Center выравнивает содержимое по центру экрана
          child: Card(
            // Card создаёт контейнер с закруглёнными углами и тенью
            child: Column(
              mainAxisSize: MainAxisSize.min, // Column занимает минимальное пространство
              children: [
                Text("Child1"), // Первый текстовый элемент
                Divider(), // Разделительная линия
                Text("Child2"), // Второй текстовый элемент
                Divider(), // Разделительная линия
                Text("Child3"), // Третий текстовый элемент
              ],
            ),
          ),
        ),
      ),
    );
  }
}

/*

Этот код создаёт Flutter-приложение, которое отображает карточку (Card) в центре экрана. Карточка содержит три текстовых элемента ("Child1", "Child2", "Child3"), расположенных вертикально и разделённых линиями (Divider). Приложение использует StatelessWidget, так как интерфейс статичен и не требует управления состоянием.
Разбор ключевых компонентов
Точка входа (main):
Функция main запускает приложение, вызывая runApp с виджетом MyApp.

Класс MyApp и StatelessWidget:
MyApp наследуется от StatelessWidget, так как интерфейс не требует изменения состояния (например, обработки нажатий или динамического контента).

Это делает код проще и эффективнее.

Метод build:
Создаёт интерфейс с помощью MaterialApp и Scaffold.

title: "Flutter Playground": Задаёт заголовок приложения (отображается, например, в панели задач устройства).

Scaffold предоставляет структуру экрана, в данном случае только с основным содержимым (body).

Виджет body:
Содержит Center, который выравнивает дочерний виджет (Card) по центру экрана.

Card создаёт контейнер с закруглёнными углами и лёгкой тенью, что придаёт содержимому "карточный" вид.

Виджет Card:
Содержит Column, которая располагает элементы вертикально.

Свойство mainAxisSize: MainAxisSize.min заставляет Column занимать минимальное вертикальное пространство, а не растягиваться на весь экран.

Дочерние элементы Column:
Три виджета Text ("Child1", "Child2", "Child3").

Два виджета Divider, разделяющие текст горизонтальными линиями.

Что делает приложение
Показывает экран с карточкой в центре.

Внутри карточки три текста ("Child1", "Child2", "Child3") расположены вертикально и разделены линиями.

Карточка имеет стандартный стиль Material Design с закруглёнными углами и лёгкой тенью.


* */
