// Импортируем библиотеку Flutter для создания интерфейса приложения
import 'package:flutter/material.dart';

// Точка входа в приложение — функция main запускает приложение
void main() => runApp(MyApp());

// Класс MyApp — главный виджет приложения, наследуется от StatelessWidget (неизменяемый виджет)
class MyApp extends StatelessWidget {
  @override
  // Метод build определяет, как будет выглядеть экран
  Widget build(BuildContext context) {
    return MaterialApp(
      title: "Flutter Playground", // Заголовок приложения
      home: Scaffold(
        // Scaffold задаёт структуру экрана
        appBar: AppBar(
          title: Text("Flutter Playground!"), // Заголовок в верхней панели
        ),
        // Drawer — боковое меню, открываемое свайпом или нажатием на иконку меню
        drawer: Drawer(
          child: Column(
            // Column располагает элементы меню вертикально
            children: [
              Text("Item 1"), // Первый пункт меню
              Divider(), // Разделительная линия
              Text("Item 2"), // Второй пункт меню
              Divider(), // Разделительная линия
              Text("Item 3"), // Третий пункт меню
            ],
          ),
        ),
        // Основное содержимое экрана
        body: Center(
          // Center выравнивает содержимое по центру
          child: Row(
            // Row располагает элементы горизонтально
            children: [
              Text("Child1"), // Первый элемент
              Text("Child2"), // Второй элемент
              Text("Child3"), // Третий элемент
            ],
          ),
        ),
      ),
    );
  }
}
/*
Этот код создаёт простое Flutter-приложение с боковым меню (Drawer) и основным экраном, на котором три текстовых элемента расположены горизонтально. Боковое меню содержит три пункта, разделённых линиями (Divider). Приложение использует StatelessWidget, так как не требует управления состоянием.
Разбор ключевых компонентов
Точка входа (main):
Функция main запускает приложение, вызывая runApp с виджетом MyApp.

Класс MyApp и StatelessWidget:
MyApp наследуется от StatelessWidget, так как интерфейс статичен и не требует изменения состояния (например, переключения страниц или обработки нажатий).

Это делает код проще и эффективнее.

Метод build:
Создаёт интерфейс с помощью MaterialApp и Scaffold.

title: "Flutter Playground": Задаёт заголовок приложения (отображается, например, в панели задач устройства).

Scaffold предоставляет структуру экрана: верхнюю панель (appBar), боковое меню (drawer) и основное содержимое (body).

Виджет AppBar:
Отображает заголовок "Flutter Playground!" в верхней части экрана.

Автоматически добавляет иконку меню (гамбургер) в левом углу, если задан drawer.

Виджет Drawer:
Создаёт боковое меню, которое открывается свайпом вправо или нажатием на иконку меню в AppBar.

Содержит Column с тремя текстовыми пунктами ("Item 1", "Item 2", "Item 3"), разделёнными линиями (Divider).

Виджет body:
Содержит Center, который выравнивает содержимое по центру экрана.

Внутри Center находится Row, отображающий три текста ("Child1", "Child2", "Child3") горизонтально.

Что делает приложение
Показывает экран с заголовком "Flutter Playground!" в верхней панели (AppBar).

В левом углу AppBar есть иконка меню, открывающая боковое меню (Drawer) с тремя пунктами: "Item 1", "Item 2", "Item 3", разделёнными линиями.

На главном экране три текста ("Child1", "Child2", "Child3") расположены горизонтально в центре.

Полезные замечания для изучения Flutter
StatelessWidget:
Используется, когда интерфейс не требует изменения состояния. В данном случае Drawer и содержимое экрана статичны, поэтому StatelessWidget подходит.

Drawer:
Боковое меню — стандартный элемент Material Design для навигации. Обычно используется для отображения пунктов меню, настроек или профиля.

Drawer автоматически интегрируется с AppBar, добавляя иконку меню.

Column и Row:
Column располагает элементы вертикально (используется в Drawer).

Row располагает элементы горизонтально (используется в body).

Оба виджета являются основой компоновки в Flutter.

Divider:
Виджет Divider добавляет горизонтальную линию для визуального разделения элементов. Часто используется в меню или списках.

Center:
Выравнивает дочерний виджет по центру экрана. В данном случае используется для центрирования Row.


* */
